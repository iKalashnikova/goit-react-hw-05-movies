{"version":3,"file":"static/js/149.5896e8db.chunk.js","mappings":"4QAIaA,EAAwBC,EAAAA,EAAAA,IAAH,sIASrBC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,oHAORG,EAAaH,EAAAA,EAAAA,IAAH,qFAMVI,EAAYJ,EAAAA,EAAAA,IAAH,8FAMTK,EAAmBL,EAAAA,EAAAA,IAAH,mFAMhBM,EAAQN,EAAAA,EAAAA,GAAH,oEAKLO,EAAeP,EAAAA,EAAAA,GAAH,mEAKZQ,EAASR,EAAAA,EAAAA,EAAH,oEAINS,EAAWT,EAAAA,EAAAA,EAAH,qEAMRU,EAAaV,EAAAA,EAAAA,GAAH,6FAOVW,EAAYX,EAAAA,EAAAA,GAAH,iEAKTY,EAAiBZ,EAAAA,EAAAA,IAAH,4DAKda,EAAsBb,EAAAA,EAAAA,GAAH,oEAKnBc,EAAqBd,EAAAA,EAAAA,GAAH,6EAMlBe,EAAqBf,EAAAA,EAAAA,GAAH,+CAIlBgB,GAAqBhB,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,qM,SCM/B,EA3EqB,WAAO,IAAD,IACnBiB,GAAWC,EAAAA,EAAAA,MAGTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoDF,EAAAA,EAAAA,WAAS,GAA7D,eAAOG,EAAP,KAA2BC,EAA3B,MAEAC,EAAAA,EAAAA,YAAU,WAURC,MAAM,sCAAD,OACmCR,EADnC,mBATW,CACdS,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIZ,EAAgBY,EAApB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAAClB,IAEN,IAAMoB,EAAuB,WACzBd,GAAuBD,EACxB,EAED,EACEF,GAAgB,CAAC,EADXkB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,OAAQC,EAA/C,EAA+CA,YAGzCC,GADqB,GAAfJ,GACeK,QAAQ,GAEnC,OACE,UAAC/C,EAAD,YAEI,SAACE,EAAD,CAAU8C,GAAE,oBAAE9B,EAAS+B,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAtC,sBACF,UAAC7C,EAAD,YACE,SAACD,EAAD,WACE,gBAAK+C,IAAG,yCAAoCN,GAAeO,IAAI,SAEjE,UAAC9C,EAAD,YACE,UAACC,EAAD,eAASkC,EAAT,QACA,UAAChC,EAAD,2BAAsBqC,EAAtB,QACA,SAACtC,EAAD,yBACA,SAACE,EAAD,UAAWiC,KACX,SAACnC,EAAD,qBACCoC,IACC,SAACjC,EAAD,UACGiC,EAAOS,KAAI,SAAAC,GAAK,OACf,SAAC1C,EAAD,UAA2B0C,EAAMC,MAAjBD,EAAME,GADP,aAOzB,UAAC3C,EAAD,YACE,SAACC,EAAD,+BACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAoB+B,GAAG,OAAOS,QAASjB,EAAvC,qBAEF,SAACxB,EAAD,WACE,SAACC,EAAD,CAAoB+B,GAAG,UAAUS,QAASjB,EAA1C,0BAGHf,IAAsB,SAAC,KAAD,SAI9B,C","sources":["pages/movieDetails/details.styled.js","pages/movieDetails/movieDetails.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  // max-width: 1600px;\n    margin: 0 auto;\n   \n`;\n\nexport const BackLink = styled(Link)`\n//    display: flex;\n  font-size: 14px;\n//   align-items: center;\n  column-gap: 10px;\n  `\n\nexport const MovieImage = styled.div`\n// width: 100%;\n    height: auto;\n    margin-right: 30px;\n`;\n\nexport const MovieInfo = styled.div`\n display: flex;\n//   flex-direction: column;\n  margin-right: 20px;\n`;\n\nexport const DetailsContainer = styled.div`\ndisplay: block;\n//   align-items: flex-start;\ngap: 10px\n`\n\nexport const Title = styled.h2`\n  font-size: 48px;\n  margin-bottom: 10px;\n`;\n\nexport const DetailsTitle = styled.h3`\n  font-size:32px;\n  margin-bottom: 10px;\n`\n\nexport const Rating = styled.p`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\nexport const Overview = styled.p`\nfont-size: 24px;\n  margin-bottom: 10px;\n \n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  display: block;\n  padding: 0;\n  gap: 16px;\n`;\n\nexport const GenreItem = styled.li`\nfont-size: 24px;\n  margin-bottom: 5px;\n`;\n\nexport const AdditionalInfo = styled.div`\ndisplay: block;\nmargin-top: 20px;\n`;\n\nexport const AdditionalInfoTitle = styled.h5`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  list-style-type: none;\npadding: 0;\n  margin: 0;\n`;\n\nexport const AdditionalInfoItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nexport const AdditionalInfoLink = styled(Link)`\n  display: inline-block;\n  font-size: 24px;\n  margin-right: 10px;\n  text-decoration: none;\n  color: #000;\n  transition: color 0.3s;\n\n  &:hover {\n    color: #888;\n  `","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {\n  MovieDetailsContainer,\n  MovieImage,\n  Title,\n  Rating,\n  Overview,\n  GenresList,\n  GenreItem,\n  AdditionalInfo,\n  AdditionalInfoTitle,\n  AdditionalInfoList,\n  AdditionalInfoItem,\n  MovieInfo,\n  BackLink,\n  DetailsContainer,\n  DetailsTitle,\n  AdditionalInfoLink\n} from './details.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  //   const BackLinkLocation = useRef(location.state?.from ?? '/movies');\n\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [showAdditionalInfo, setShowAdditionalInfo] = useState(false);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNTM5NjE1NGQ2YzQ3ODZkNWQ1YmUyMTI5OWEyZmUzNiIsInN1YiI6IjY0NmY5N2IyNzcwNzAwMDExOTI0MWFkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.sZAuKwEvcInwBmcDArKOc8GXVez8PoE95w65xznuwwg',\n      },\n    };\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    )\n      .then(response => response.json())\n      .then(data => setMovieDetails(data))\n      .catch(error => console.error(error));\n  }, [movieId]);\n\nconst toggleAdditionalInfo = () => {\n    setShowAdditionalInfo(!showAdditionalInfo);\n  };\n\n  const { title, vote_average, overview, genres, poster_path } =\n    movieDetails || {};\nconst score = vote_average * 10;\n  const scoreToFixed = score.toFixed(2);\n\n  return (\n    <MovieDetailsContainer>\n      \n        <BackLink to={location.state?.from ?? '/'}>Go Back</BackLink>\n      <MovieInfo>\n        <MovieImage>\n          <img src={`http://image.tmdb.org/t/p/w400/${poster_path}`} alt=\"#\" />\n        </MovieImage>\n        <DetailsContainer>\n          <Title> {title} </Title>\n          <Rating> User score: {scoreToFixed}%</Rating>\n          <DetailsTitle> Overview</DetailsTitle>\n          <Overview>{overview}</Overview>\n          <DetailsTitle>Genres</DetailsTitle>\n          {genres && (\n            <GenresList>\n              {genres.map(genre => (\n                <GenreItem key={genre.id}>{genre.name}</GenreItem>\n              ))}\n            </GenresList>\n          )}\n        </DetailsContainer>\n      </MovieInfo>\n      <AdditionalInfo>\n        <AdditionalInfoTitle>Additional Info</AdditionalInfoTitle>\n        <AdditionalInfoList>\n          <AdditionalInfoItem>\n            <AdditionalInfoLink to=\"Cast\" onClick={toggleAdditionalInfo}>Cast</AdditionalInfoLink>\n          </AdditionalInfoItem>\n          <AdditionalInfoItem>\n            <AdditionalInfoLink to=\"Reviews\" onClick={toggleAdditionalInfo}>Reviews</AdditionalInfoLink>\n          </AdditionalInfoItem>\n        </AdditionalInfoList>\n        {showAdditionalInfo && <Outlet />}\n      </AdditionalInfo>\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieDetailsContainer","styled","BackLink","Link","MovieImage","MovieInfo","DetailsContainer","Title","DetailsTitle","Rating","Overview","GenresList","GenreItem","AdditionalInfo","AdditionalInfoTitle","AdditionalInfoList","AdditionalInfoItem","AdditionalInfoLink","location","useLocation","movieId","useParams","useState","movieDetails","setMovieDetails","showAdditionalInfo","setShowAdditionalInfo","useEffect","fetch","method","headers","accept","Authorization","then","response","json","data","catch","error","console","toggleAdditionalInfo","title","vote_average","overview","genres","poster_path","scoreToFixed","toFixed","to","state","from","src","alt","map","genre","name","id","onClick"],"sourceRoot":""}