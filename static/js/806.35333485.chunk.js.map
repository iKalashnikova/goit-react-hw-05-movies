{"version":3,"file":"static/js/806.35333485.chunk.js","mappings":"8OAEaA,EAAkBC,EAAAA,EAAAA,IAAH,uEAKfC,EAASD,EAAAA,EAAAA,GAAH,0FAMNE,EAAUF,EAAAA,EAAAA,EAAH,4CAIPG,EAAaH,EAAAA,EAAAA,GAAH,4DAKVI,EAAaJ,EAAAA,EAAAA,GAAH,gD,SCkBvB,EApCgB,WACZ,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBE,OAfFC,EAAAA,EAAAA,YAAU,WASdC,MAAM,sCAAD,OAAuCN,EAAvC,kCARoB,CACvBO,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,gOAKhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIV,EAAWU,EAAKC,QAApB,IACTC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GAAyB,GAAE,CAACjB,KAI9B,SAACN,EAAD,WACI,SAACI,EAAD,UACKK,EAAQiB,OAAO,EAChBjB,EAAQkB,KAAI,SAAAC,GAAM,OAChB,UAACvB,EAAD,YACI,UAACH,EAAD,sBAAiB0B,EAAOC,WACxB,SAAC1B,EAAD,UAAUyB,EAAOE,YAFJF,EAAOG,GADR,IAMf,oDAIpB,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewContainer = styled.div`\n  margin-bottom: 20px;\n  margin-right: 30px;\n`;\n\nexport const Author = styled.h2`\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const Content = styled.p`\n  font-size: 14px;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {ReviewContainer, Author, Content, ReviewList , ReviewItem} from './Reviews.styled'\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setRewiews] = useState([])\n\n\n    useEffect(() => \n        {const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNTM5NjE1NGQ2YzQ3ODZkNWQ1YmUyMTI5OWEyZmUzNiIsInN1YiI6IjY0NmY5N2IyNzcwNzAwMDExOTI0MWFkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.sZAuKwEvcInwBmcDArKOc8GXVez8PoE95w65xznuwwg'\n  }\n};\n\nfetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`, options)\n  .then(response => response.json())\n  .then(data => setRewiews(data.results))\n  .catch(err => console.error(err));}, [movieId])\n\n    \n      return (\n          <ReviewContainer>\n              <ReviewList>\n                  {reviews.length>0\n                ? reviews.map(review => (\n                    <ReviewItem key={review.id}>\n                        <Author>Author: {review.author}</Author>\n                        <Content>{review.content}</Content>\n                    </ReviewItem>\n                  ))\n                   : \"Sorry, we don't have any review for this movie\"}\n            </ReviewList>\n        </ReviewContainer>\n    );\n}\n\nexport default Reviews;"],"names":["ReviewContainer","styled","Author","Content","ReviewList","ReviewItem","movieId","useParams","useState","reviews","setRewiews","useEffect","fetch","method","headers","accept","Authorization","then","response","json","data","results","catch","err","console","error","length","map","review","author","content","id"],"sourceRoot":""}