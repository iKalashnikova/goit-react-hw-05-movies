{"version":3,"file":"static/js/148.f29462b7.chunk.js","mappings":"6LA+DA,UA5De,WAAO,IAAD,EAEjB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACC,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,MAEDC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAa,CASbG,MAAM,6FAAD,OAA8FR,GARnF,CACZS,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,gOAKlBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIZ,EAAiBY,EAAKC,QAA1B,IACTC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IAEdb,GAAe,EAClB,CACH,GAAE,CAACN,EAAOK,IAEZ,IAAMiB,GAAWC,EAAAA,EAAAA,MAgBjB,OAAO,4BACH,kBACIC,KAAK,OACLC,MAAOzB,EACP0B,SAXkB,SAAAC,GACtB,GAAwB,KAArBA,EAAIC,OAAOH,MACV,OAAO1B,EAAgB,CAAC,GAE5BA,EAAgB,CAAEC,MAAO2B,EAAIC,OAAOH,OACzC,KAOK,mBAAQI,QAnBS,WACrB9B,EAAgB,CAAEC,MAAAA,IAClBM,GAAe,EAChB,EAgBK,qBAEA,wBACLH,EAAc2B,KAAI,SAAA9B,GAAK,OACtB,yBACE,SAAC,KAAD,CAAM+B,GAAE,UAAK/B,EAAMgC,IAAMC,MAAO,CAAEC,KAAMZ,GAAxC,SAAqDtB,EAAMmC,SADpDnC,EAAMgC,GADO,QAQzB,C","sources":["pages/movies.js"],"sourcesContent":["import { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\n\nconst Movies = () => {\n    // useState\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movie = searchParams.get('movie') ?? '';\n    const [searchResults, setSearchResults] = useState([]);\n     const [isSearching, setIsSearching] = useState(false);\n\n    useEffect(() => {\n        if (isSearching) {\n            const options = {\n                method: 'GET',\n                headers: {\n                    accept: 'application/json',\n                    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNTM5NjE1NGQ2YzQ3ODZkNWQ1YmUyMTI5OWEyZmUzNiIsInN1YiI6IjY0NmY5N2IyNzcwNzAwMDExOTI0MWFkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.sZAuKwEvcInwBmcDArKOc8GXVez8PoE95w65xznuwwg'\n                }\n            };\n\n            fetch(`https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${movie}`, options)\n                .then(response => response.json())\n                .then(data => setSearchResults(data.results))\n                .catch(err => console.error(err));\n        \n            setIsSearching(false);\n        }\n     }, [movie, isSearching]);\n    \n    const location = useLocation();\n\n    const handleSearch = () => {\n    setSearchParams({ movie });\n    setIsSearching(true);\n  };\n\n\n    \n    const updateQueryString = evt => {\n        if(evt.target.value === ''){\n            return setSearchParams({}); \n        }\n        setSearchParams({ movie: evt.target.value });\n  };\n    \n    return <div>\n        <input\n            type='text'\n            value={movie}\n            onChange={updateQueryString} />\n        <button onClick={handleSearch}>Search</button>\n       \n        <ul>\n  {searchResults.map(movie => (\n    <li key={movie.id}>\n      <Link to={`${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n    </li>\n  ))}\n</ul>\n    </div>\n        \n}\n\nexport default Movies;"],"names":["useSearchParams","searchParams","setSearchParams","movie","get","useState","searchResults","setSearchResults","isSearching","setIsSearching","useEffect","fetch","method","headers","accept","Authorization","then","response","json","data","results","catch","err","console","error","location","useLocation","type","value","onChange","evt","target","onClick","map","to","id","state","from","title"],"sourceRoot":""}