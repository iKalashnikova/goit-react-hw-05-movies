{"version":3,"file":"static/js/280.5e3e1c4a.chunk.js","mappings":"wPAGaA,EAAkBC,EAAAA,EAAAA,IAAH,gDAIfC,EAAUD,EAAAA,EAAAA,MAAH,mFAMPE,EAAWF,EAAAA,EAAAA,OAAH,4KAURG,EAAcH,EAAAA,EAAAA,GAAH,iEAKXI,EAAWJ,EAAAA,EAAAA,GAAH,gDAIRK,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,sI,SCsDvB,EA3Ee,WAAO,IAAD,EAEnB,GAAwCO,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAQ,UAACF,EAAaG,IAAI,gBAAlB,QAA8B,IAAhE,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAA0CH,EAAAA,EAAAA,UAAS,IAAnD,eAAOI,EAAP,KAAsBC,EAAtB,KACA,GAAsCL,EAAAA,EAAAA,WAAS,GAA/C,eAAOM,EAAP,KAAoBC,EAApB,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAIJ,EAAa,CAUfK,MAAM,6FAAD,OAC0FT,GAV/E,CACdU,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJd,EAAiBc,EAAKC,QAEvB,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IAEZf,GAAe,GACfJ,EAAS,GACV,CACF,GAAE,CAACD,EAAOI,IAsBX,OACE,UAACjB,EAAD,YACE,SAACE,EAAD,CAASkC,KAAK,OAAOC,MAAOxB,EAAOyB,SAVb,SAAAC,GACxB,IAAMF,EAAQE,EAAIC,OAAOH,MACzBvB,EAASuB,GACK,KAAVA,GACF3B,EAAgB,CAAC,EAEpB,KAKG,SAACP,EAAD,CAAUsC,QAvBO,WACnB/B,EAAgB,CAAEG,MAAAA,IAClBK,GAAe,EAChB,EAoBG,qBAEA,SAACd,EAAD,UACGW,EAAc2B,KAAI,SAAA7B,GAAK,OACtB,SAACR,EAAD,WACE,SAACC,EAAD,CAAYqC,GAAE,UAAK9B,EAAM+B,IAAMC,MAAO,CAAEC,KAAM3B,GAA9C,SACGN,EAAMkC,SAFIlC,EAAM+B,GADC,QAU/B,C","sources":["pages/movies/movies.styled.js","pages/movies/movies.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nexport const SearchContainer = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const InputEl = styled.input`\noutline:transparent;\n  padding: 5px;\n  font-size: 16px;\n`;\n\nexport const ButtonEl = styled.button`\n  padding: 8px 16px;\n  font-size: 16px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport const ResultsList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const LinkStyled = styled(Link)`\n text-decoration: none;\n  color: #007bff;\n  font-weight: bold;\n  \n   &:hover {\n    color: #ff0000;\n  }\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {\n  SearchContainer,\n  InputEl,\n  ButtonEl,\n  ResultsList,\n  ListItem,\n  LinkStyled,\n} from './movies.styled';\n\nconst Movies = () => {\n  // useState\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movie, setMovie] = useState(searchParams.get('movie') ?? '');\n  // const movie = searchParams.get('movie') ?? '';\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  //  const [savedMovieList, setSavedMovieList] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (isSearching) {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNTM5NjE1NGQ2YzQ3ODZkNWQ1YmUyMTI5OWEyZmUzNiIsInN1YiI6IjY0NmY5N2IyNzcwNzAwMDExOTI0MWFkZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.sZAuKwEvcInwBmcDArKOc8GXVez8PoE95w65xznuwwg',\n        },\n      };\n\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${movie}`,\n        options\n      )\n        .then(response => response.json())\n        .then(data => {\n          setSearchResults(data.results);\n          // setSavedMovieList(data.results);\n        })\n        .catch(err => console.error(err));\n\n      setIsSearching(false);\n      setMovie('');\n    }\n  }, [movie, isSearching]);\n\n  const handleSearch = () => {\n    setSearchParams({ movie });\n    setIsSearching(true);\n  };\n\n  //     const updateQueryString = evt => {\n  //         if(evt.target.value === ''){\n  //             return setSearchParams({});\n  //         }\n  //         setSearchParams({ movie: evt.target.value });\n  //   };\n\n  const updateQueryString = evt => {\n    const value = evt.target.value;\n    setMovie(value);\n    if (value === '') {\n      setSearchParams({});\n    }\n  };\n\n  return (\n    <SearchContainer>\n      <InputEl type=\"text\" value={movie} onChange={updateQueryString} />\n      <ButtonEl onClick={handleSearch}>Search</ButtonEl>\n\n      <ResultsList>\n        {searchResults.map(movie => (\n          <ListItem key={movie.id}>\n            <LinkStyled to={`${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </LinkStyled>\n          </ListItem>\n        ))}\n      </ResultsList>\n    </SearchContainer>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchContainer","styled","InputEl","ButtonEl","ResultsList","ListItem","LinkStyled","Link","useSearchParams","searchParams","setSearchParams","useState","get","movie","setMovie","searchResults","setSearchResults","isSearching","setIsSearching","location","useLocation","useEffect","fetch","method","headers","accept","Authorization","then","response","json","data","results","catch","err","console","error","type","value","onChange","evt","target","onClick","map","to","id","state","from","title"],"sourceRoot":""}